apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-nginx-config
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
data:
  default.conf: |-
    # Logging format
    log_format wp_project_skeleton '$http_x_real_ip [$time_local] "$request" '
                                   '$status $body_bytes_sent "$http_referer" '
                                   '"$http_user_agent" "$http_x_forwarded_for" "$http_x_amzn_trace_id"';

    # Hide version
    server_tokens off;

    # Hide PHP version
    fastcgi_hide_header X-Powered-By;
    proxy_hide_header X-Powered-By;

    # Gzip
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/eot
      font/opentype
      font/otf
      font/ttf
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/javascript
      text/plain
      text/vcard
      text/vnd.rim.location.xloc
      text/vtt
      text/xml
      text/x-component
      text/x-cross-domain-policy;

    server {
      listen 80 default_server;
      listen [::]:80 default_server;

      server_name _;

      access_log /var/log/nginx/access.log wp_project_skeleton;
      error_log /var/log/nginx/error.log;

      root /var/www/html/public;
      index index.php;

      client_max_body_size {{ .Values.nginx.clientMaxBodySize | quote }};

      # Favicon
      location = /favicon.ico {
        log_not_found off;
        access_log off;
      }

      {{- if or (.Values.nginx.disallowRobots) (ne .Values.app.environment "production")  }}
      # Disallow robots
      location /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
      }
      {{- else }}
      location = /robots.txt {
        try_files $uri $uri/ /index.php?$args;
        log_not_found off;
        access_log off;
      }
      {{- end }}

      # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
      # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
      location ~ /\. {
        deny all;
      }

      # Deny access to any files with a .php extension in the uploads directory
      # Works in sub-directory installs and also in multisite network
      # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
      location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
      }

      # Deny XML-RPC
      location ~* /xmlrpc\.php$ {
        deny all;
      }

      # Deny README
      location ~* /readme\.html$ {
        deny all;
      }

      # Redirect server error pages to the static page /50x.html
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root /usr/share/nginx/html;
      }

      {{- if .Values.app.multisite }}
      if (!-e $request_filename) {
        rewrite /wp-admin$ $scheme://$host$uri/ permanent;
        rewrite ^(/[^/]+)?(/wp-.*) /wp$2 last;
        rewrite ^(/[^/]+)?(/.*.php) /wp$2 last;
      }
      {{- end }}

      {{- if .Values.nginx.s3Rewrite }}
      location ^~ /wp-content/uploads/ {
        rewrite ^/wp-content/uploads/(.*)$ https://{{ include "wp-project-skeleton.s3Bucket" . }}/uploads/$1 permanent;
      }
      {{- end }}

      {{- if .Values.nginx.additionalConfiguration }}
      {{- .Values.nginx.additionalConfiguration | nindent 8 }}
      {{- end }}

      location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
      }

      location ~ \.php$ {
        # Redirect to canonical domain
        {{- if .Values.nginx.canonicalHostname }}
        set $redirect 1;
        if ($host = "{{ .Values.nginx.canonicalHostname }}") {
          set $redirect 0;
        }
        if ($http_health_probe = "liveness") {
          set $redirect 0;
        }
        if ($http_health_probe = "readiness") {
          set $redirect 0;
        }
        if ($redirect = 1) {
          return 301 https://{{ .Values.nginx.canonicalHostname }}$request_uri;
        }
        {{- end }}
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_param HTTP_X_REQUEST_START "t=${msec}";
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SERVER_NAME "{{ .Values.nginx.hostsHeader }}";
        fastcgi_param HTTP_HOST "{{ .Values.nginx.hostsHeader }}";
        fastcgi_index index.php;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
      }

      # Serve static files directly
      location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|bmp|ico|cur|heic|webp|tiff?|svg|woff2?|ttf|ttc|otf|eot|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
        expires max;
        log_not_found off;
        access_log off;
        add_header Access-Control-Allow-Origin "*";
        add_header Cache-Control "public";
      }
    }
